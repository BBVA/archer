apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

ext {
    confluent_version = '5.2.1'
    kafka_version = '2.2.0'
    avro_version = '1.8.2'
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "http://packages.confluent.io/maven/" }
        maven {
            url internalRepositoryURL
            authentication {
                awsIm(AwsImAuthentication)

            }
        }

    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    group = "bbva.ndb"

    dependencies {
        compile("org.apache.kafka:kafka-streams:$project.kafka_version")
        compile("org.apache.kafka:kafka_2.11:$project.kafka_version")
        compile('org.scala-lang:scala-library:2.11.8')
        compile('org.reflections:reflections:0.9.10')

        testCompile 'org.mockito:mockito-all:1.10.19'
        testCompile 'org.powermock:powermock-mockito-release-full:1.6.4'
        testImplementation 'junit:junit:4.12'
        testImplementation 'org.junit:junit4-runner:5.0.0-ALPHA'
        testImplementation 'org.junit:junit5-api:5.0.0-ALPHA'
        testImplementation 'org.junit:junit5-engine:5.0.0-ALPHA'
    }

    apply from: '../ jacoco.gradle '

    clean {
        delete 'tests'
        delete 'build'
        delete 'out'
    }

    jar {
        manifest {
            attributes('Implementation-Title': project.name,
                    'Implementation-Version': project.version)
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        repositories {
            maven {
                url internalRepositoryURL
                authentication {
                    awsIm(AwsImAuthentication)
                }
            }
        }
    }

}

subprojects {
    version = '1.0.0-beta.1'
}
